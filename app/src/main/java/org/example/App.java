/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

public class App {

    public static <T> List<T> zip(List<T> list1, List<T> list2) {
        List<T> result = new ArrayList<>();
        int i = 0;
        while (i < list1.size() || i < list2.size()) {
            if (i < list1.size()) result.add(list1.get(i));
            if (i < list2.size()) result.add(list2.get(i));
            i++;
        }
        return result;
    }

    public static <V> HashMap<String, V> hashmapify(List<String> keys, List<V> values) {
        if (keys.size() != values.size()) {
            throw new IllegalArgumentException("Both lists must have the same size.");
        }
        HashMap<String, V> map = new HashMap<>();
        for (int i = 0; i < keys.size(); i++) {
            map.put(keys.get(i), values.get(i));
        }
        return map;
    }

    public static void main(String[] args) {
        List<Integer> nums1 = List.of(1, 3, 5, 7);
        List<Integer> nums2 = List.of(2, 4, 6, 8);
        System.out.println("Zipped Integers: " + zip(nums1, nums2));
        List<String> colors1 = List.of("Red", "Green", "Blue");
        List<String> colors2 = List.of("White", "Black", "Orange", "Pink", "Fuschia");
        System.out.println("Zipped Colors: " + zip(colors1, colors2));
        List<String> keys = List.of("White", "Black", "Orange", "Pink");
        List<Integer> vals = List.of(1, 3, 5, 7);
        System.out.println("HashMap: " + hashmapify(keys, vals));
    }
}
